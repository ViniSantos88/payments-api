// Code generated by MockGen. DO NOT EDIT.
// Source: application/repositories/payments.go

// Package repositoriesmocks is a generated GoMock package.
package repositoriesmocks

import (
	reflect "reflect"

	domain "github.com/ViniSantos88/payments-api/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockPaymentsRepo is a mock of PaymentsRepo interface.
type MockPaymentsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentsRepoMockRecorder
}

// MockPaymentsRepoMockRecorder is the mock recorder for MockPaymentsRepo.
type MockPaymentsRepoMockRecorder struct {
	mock *MockPaymentsRepo
}

// NewMockPaymentsRepo creates a new mock instance.
func NewMockPaymentsRepo(ctrl *gomock.Controller) *MockPaymentsRepo {
	mock := &MockPaymentsRepo{ctrl: ctrl}
	mock.recorder = &MockPaymentsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentsRepo) EXPECT() *MockPaymentsRepoMockRecorder {
	return m.recorder
}

// CreateAccounts mocks base method.
func (m *MockPaymentsRepo) CreateAccounts(accounts domain.Accounts) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccounts", accounts)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccounts indicates an expected call of CreateAccounts.
func (mr *MockPaymentsRepoMockRecorder) CreateAccounts(accounts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccounts", reflect.TypeOf((*MockPaymentsRepo)(nil).CreateAccounts), accounts)
}

// CreateTransactions mocks base method.
func (m *MockPaymentsRepo) CreateTransactions(transaction domain.Transactions) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransactions", transaction)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTransactions indicates an expected call of CreateTransactions.
func (mr *MockPaymentsRepoMockRecorder) CreateTransactions(transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransactions", reflect.TypeOf((*MockPaymentsRepo)(nil).CreateTransactions), transaction)
}

// GetAccount mocks base method.
func (m *MockPaymentsRepo) GetAccount(accountID int64) (domain.Accounts, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", accountID)
	ret0, _ := ret[0].(domain.Accounts)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockPaymentsRepoMockRecorder) GetAccount(accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockPaymentsRepo)(nil).GetAccount), accountID)
}
